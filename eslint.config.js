import globals from "globals";
import tseslint from "typescript-eslint";
import json from "@eslint/json";
import { defineConfig } from "eslint/config";

export default defineConfig([
  { files: ["**/*.{js,mjs,cjs,ts,mts,cts}"], languageOptions: { globals: globals.node } },
  tseslint.configs.recommended,
  {
    language: "typescript",
    extends: ["plugin:@typescript-eslint/recommended"],
    parser: "@typescript-eslint/parser",
    plugins: { "@typescript-eslint": {} },
    rules: {
      "@typescript-eslint/no-var-requires": "off",
      "@typescript-eslint/no-misused-promises": "off",
      "@typescript-eslint/no-floating-promises": "off",
      "@typescript-eslint/no-misused-new": "off",
      "@typescript-eslint/restrict-template-expressions": "off",
      "@typescript-eslint/restrict-plus-operands": "off",
      "@typescript-eslint/no-unnecessary-condition": "off",
      "@typescript-eslint/no-unnecessary-type-assertion": "off",
      "@typescript-eslint/no-unsafe-argument": "off",
      "@typescript-eslint/no-unsafe-assignment": "off",
      "@typescript-eslint/no-unsafe-call": "off",
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/no-unsafe-return": "off",
      "@typescript-eslint/prefer-includes": "off",
      "@typescript-eslint/prefer-nullish-coalescing": "off",
      "@typescript-eslint/prefer-optional-chain": "off",
      "@typescript-eslint/prefer-string-starts-ends-with": "off",
      "@typescript-eslint/promise-function-async": "off",
      "@typescript-eslint/require-array-sort-compare": "off",
      "@typescript-eslint/return-await": "off",
      "@typescript-eslint/strict-boolean-expressions": "off",
      "@typescript-eslint/switch-exhaustiveness-check": "off",
      "@typescript-eslint/unbound-method": "off",
      indent: ["error", 4, { "SwitchCase": 1 }],
      "array-bracket-spacing": ["error", "always", { "singleValue": false, "objectsInArrays": false, "arraysInArrays": false }],
      "block-spacing": ["error", "always"],
      "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
      "comma-dangle": ["error", "always-multiline"],
      "comma-spacing": ["error", { "before": 0, "after": 1 }],
      "comma-style": ["error", "last"],
      "func-call-spacing": ["error", "never"],
      "generator-star-spacing": ["error", "after"],
      "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
      "keyword-spacing": ["error", { "before": true, "after": true }],
      "linebreak-style": ["error", "unix"],
      "no-whitespace-before-property": ["error"],
      "no-mixed-spaces-and-tabs": ["error"],
      "object-curly-newline": ["error", { "ObjectExpression": "always", "ObjectPattern": "always" }],
      "object-curly-spacing": ["error", "always"],
      "object-property-newline": ["error", { "allowAllPropertiesOnSameLine": true }],
      "operator-linebreak": ["error", "after"],
      "padded-blocks": ["error", "never"],
      "rest-spread-spacing": ["error", "never"],
      "semi-spacing": ["error", { "before": false, "after": true }],
      "semi-style": ["error", "last"],
      "switch-colon-spacing": ["error", { "before": false, "after": true }],
      "template-tag-spacing": ["error", "never"],
    },
  },
  {
    files: ["**/*.json"],
    plugins: { json },
    language: "json/json",
    extends: ["json/recommended"],
    rules: {
      "indent": ["error", 4, { "SwitchCase": 1 }],
      "array-bracket-spacing": ["error", "always", { "singleValue": false, "objectsInArrays": false, "arraysInArrays": false }],
      "block-spacing": ["error", "always"],
      "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
      "comma-dangle": ["error", "always-multiline"],
      "comma-spacing": ["error", { "before": 0, "after": 1 }],
      "comma-style": ["error", "last"],
      "func-call-spacing": ["error", "never"],
      "generator-star-spacing": ["error", "after"],
      "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
      "keyword-spacing": ["error", { "before": true, "after": true }],
      "linebreak-style": ["error", "unix"],
      "no-whitespace-before-property": ["error"],
      "no-mixed-spaces-and-tabs": ["error"],
      "object-curly-newline": ["error", { "ObjectExpression": "always", "ObjectPattern": "always" }],
      "object-curly-spacing": ["error", "always"],
      "object-property-newline": ["error", { "allowAllPropertiesOnSameLine": true }],
      "operator-linebreak": ["error", "after"],
      "padded-blocks": ["error", "never"],
      "rest-spread-spacing": ["error", "never"],
      "semi-spacing": ["error", { "before": false, "after": true }],
      "semi-style": ["error", "last"],
      "switch-colon-spacing": ["error", { "before": false, "after": true }],
      "template-tag-spacing": ["error", "never"],
    },
  },
]);
